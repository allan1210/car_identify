import cv2
import imutils
import easyocr
import numpy as np
import re
from pymongo import MongoClient
from datetime import datetime
from bson import ObjectId

# 連接到 MongoDB
client = MongoClient('mongodb://localhost:27017/')
db = client['parking_system']  # 修改為你的資料庫名稱
collection = db['parking_info']  # 修改為你的集合名稱

# 初始化攝像頭
cap = cv2.VideoCapture(0, cv2.CAP_DSHOW)
if not cap.isOpened():
    print("無法打開攝像頭")
    exit()

# 初始化 EasyOCR
reader = easyocr.Reader(['en'], gpu=False)

# 影像前處理函數
def preprocess_image(image):
    if image is None:
        return None
    # 調整大小
    resized_image = imutils.resize(image, width=500)
    # 中值模糊
    blurred = cv2.medianBlur(resized_image, 3)  # 調整模糊程度
    # 灰度轉換
    gray = cv2.cvtColor(blurred, cv2.COLOR_BGR2GRAY)
    # CLAHE 對比度增強
    clahe = cv2.createCLAHE(clipLimit=2.0, tileGridSize=(8, 8))
    enhanced = clahe.apply(gray)
    # Canny邊緣檢測
    edged = cv2.Canny(enhanced, 30, 100)  # 調整 Canny 閾值
    return edged

# 車牌辨識函數
def recognize_license_plate(frame):
    edged = preprocess_image(frame)
    license_plate_text = None
    NumberPlateCnt = None

    # 尋找輪廓
    contours, _ = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)

    for contour in contours:
        if cv2.contourArea(contour) < 1000:
            continue
        peri = cv2.arcLength(contour, True)
        approx = cv2.approxPolyDP(contour, 0.02 * peri, True)
        if len(approx) == 4:
            NumberPlateCnt = approx

            # 創建遮罩
            mask = np.zeros(edged.shape[:2], dtype=np.uint8)
            new_image = cv2.drawContours(mask, [NumberPlateCnt], -1, (255, 255, 255), thickness=cv2.FILLED)
            frame = cv2.convertScaleAbs(frame)
            mask = cv2.convertScaleAbs(mask)
            resized_mask = cv2.resize(mask, (frame.shape[1], frame.shape[0]))
            new_image = cv2.bitwise_and(frame, frame, mask=resized_mask)
            gray = cv2.cvtColor(new_image, cv2.COLOR_BGR2GRAY)
            ret, thresh1 = cv2.threshold(gray, 120, 255, cv2.THRESH_BINARY)
            cv2.imwrite('thresh1.jpg', thresh1)

            # 使用 EasyOCR 辨識文字
            results = reader.readtext(thresh1, allowlist='ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-')
            if results:
                text = results[0][-2]
                print("plate_number:", text)
                now = datetime.now()
                current_time = now.strftime("%H:%M:%S")
                print("parking_start_time:", current_time)

                # 使用正規表達式匹配車牌號碼格式
                match = re.match(r'^[A-Z]{3}\d{4}$', text)
                if match:
                    plate_number = match.group()
                    print("plate_number:", plate_number)
                    save_license_plate(plate_number)

                    x, y, w, h = cv2.boundingRect(NumberPlateCnt)
                    # 繪製車牌區域的矩形
                    cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)

                    # 用黃線框出車牌區域
                    cv2.drawContours(frame, [NumberPlateCnt], -1, (0, 255, 255), 2)

                    return plate_number
    return None

# 儲存車牌資訊到 MongoDB 
def save_license_plate(plate_number):
    now = datetime.now()
    current_time = now.strftime("%H:%M:%S")
    existing_record = collection.find_one({'plate_number': plate_number})
    if existing_record:
        print("數據已存在，不需要插入")
        # 在這個例子中，我們只更新進入時間
        collection.update_one({'plate_number': plate_number}, {'$set': {'parking_start_time': current_time}})
    else:
        data = {'plate_number': plate_number, 'parking_start_time': current_time}
        data['id'] = ObjectId()

        result = collection.insert_one(data)

        if result.inserted_id:
            print("插入成功")

# 避免重複插入相同的車牌號碼
inserted_license_plates = set()

while True:
    ret, frame = cap.read()

    if not ret:
        print("無法讀取")
        break

    # 辨識車牌
    license_plate_text = recognize_license_plate(frame)

    if license_plate_text:
        # 避免重複插入相同的車牌號碼
        if license_plate_text not in inserted_license_plates:
            inserted_license_plates.add(license_plate_text)
            save_license_plate(license_plate_text)

    # 顯示攝像頭畫面
    cv2.imshow('Camera', frame)

    # 按下 'q' 鍵退出迴圈
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# 釋放資源
cv2.destroyAllWindows()
cap.release()
client.close()
